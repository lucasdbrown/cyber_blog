<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lucas Brown on Lucas Brown — Cybersecurity Blog</title>
    <link>http://localhost:1313/cyber_blog/</link>
    <description>Recent content in Lucas Brown on Lucas Brown — Cybersecurity Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2025 Lucas Brown</copyright>
    <lastBuildDate>Fri, 26 Sep 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/cyber_blog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>From Prompts to Payloads: Inside MalTerminal and the Rise of AI-Enabled Malware</title>
      <link>http://localhost:1313/cyber_blog/posts/malterminal/</link>
      <pubDate>Fri, 26 Sep 2025 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/cyber_blog/posts/malterminal/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;Discovery of MalTerminal 
    &lt;div id=&#34;discovery-of-malterminal&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#discovery-of-malterminal&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;SentinelOne’s research team discovered a new malware, which they call MalTerminal, and claim it is one of the earliest examples of malware with LLM capabilities embedded into it. MalTerminal malware samples were found to contain an OpenAI 2023 API endpoint that was deprecated, hinting that it was one of the earliest malware samples to utilize LLMs. MalTerminal is a program (Python scripts compiled as a Windows executable) that doesn’t carry its malicious logic inside the file. Instead, it asks an LLM (GPT-4) to write the malicious code when it runs. When you run it, the operator picks what they want, either to make ransomware or a reverse shell. That instruction becomes the prompt the malware sends to GPT-4 via an API call. The LLM then generates code tailored to that request. The malware contains hardcoded API keys and carefully crafted prompts (these are embedded in the scripts/binary). SentinelOne found these keys/prompts while hunting binaries.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Chain of CVEs enable RCE in Kubernetes Clusters</title>
      <link>http://localhost:1313/cyber_blog/posts/chaos-mesh-rce/</link>
      <pubDate>Thu, 18 Sep 2025 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/cyber_blog/posts/chaos-mesh-rce/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;Unauthenticated Access via Chaos Mesh Debugging API 
    &lt;div id=&#34;unauthenticated-access-via-chaos-mesh-debugging-api&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#unauthenticated-access-via-chaos-mesh-debugging-api&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;JFrog Researchers found that if attackers are able to gain initial access to a Kubernetes Cluster’s network, they can exploit a chain of CVEs found in Chaos Mesh to perform remote code execution (RCE) across the cluster. Chaos Mesh is an open-source cloud-native Chaos Engineering platform that offers various types of fault simulation, simulating various abnormalities that might occur during the software development lifecycle. The Chaos Controller Manager, a part of the platform, by default, exposes a GraphQL debugging server, which does not have authentication. This allows an attacker to have access to an API that they can use to kill processes in any Kubernetes pod, which could lead to a cluster-wide Denial of Service (DoS) attack (CVE-2025-59358, CVSS score: 7.5).&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Docker API Malware Variant with Botnet Capabilities</title>
      <link>http://localhost:1313/cyber_blog/posts/docker-api-botnet/</link>
      <pubDate>Wed, 10 Sep 2025 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/cyber_blog/posts/docker-api-botnet/</guid>
      <description>&lt;h3 class=&#34;relative group&#34;&gt;Initial Exploitation 
    &lt;div id=&#34;initial-exploitation&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#initial-exploitation&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;The attackers start by sending an initial HTTP request to a Docker remote API server to create a new container. In this case, the Akamai Threat Hunting team used the Beelzebub honeypot to discover this threat. The attacker then creates a new container image running Alpine Linux that mounts the host&amp;rsquo;s filesystem and executes a base64-encoded script.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Malicious Nx Packages Attack Leaked 2,349 Credentials</title>
      <link>http://localhost:1313/cyber_blog/posts/s1ngularity-nx-supply-chain/</link>
      <pubDate>Thu, 04 Sep 2025 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/cyber_blog/posts/s1ngularity-nx-supply-chain/</guid>
      <description></description>
      
    </item>
    
  </channel>
</rss>
